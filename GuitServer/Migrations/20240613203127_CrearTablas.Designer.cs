// <auto-generated />
using System;
using GuitServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuitServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240613203127_CrearTablas")]
    partial class CrearTablas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("GuitServer.Models.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Contenido")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RepositorioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepositorioId");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("GuitServer.Models.Cambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArchivoId")
                        .HasColumnType("int");

                    b.Property<int>("CommitId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Diferencia")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("TipoCambio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ArchivoId");

                    b.HasIndex("CommitId");

                    b.ToTable("Cambios");
                });

            modelBuilder.Entity("GuitServer.Models.Commit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Checksum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RepositorioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepositorioId");

                    b.ToTable("Commits");
                });

            modelBuilder.Entity("GuitServer.Models.GuitIgnoreItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepositoryId");

                    b.ToTable("GuitIgnoreItems");
                });

            modelBuilder.Entity("GuitServer.Models.Repositorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Repositorios");
                });

            modelBuilder.Entity("GuitServer.Models.Archivo", b =>
                {
                    b.HasOne("GuitServer.Models.Repositorio", "Repositorio")
                        .WithMany()
                        .HasForeignKey("RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repositorio");
                });

            modelBuilder.Entity("GuitServer.Models.Cambio", b =>
                {
                    b.HasOne("GuitServer.Models.Archivo", "Archivo")
                        .WithMany()
                        .HasForeignKey("ArchivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GuitServer.Models.Commit", "Commit")
                        .WithMany()
                        .HasForeignKey("CommitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Archivo");

                    b.Navigation("Commit");
                });

            modelBuilder.Entity("GuitServer.Models.Commit", b =>
                {
                    b.HasOne("GuitServer.Models.Repositorio", "Repositorio")
                        .WithMany()
                        .HasForeignKey("RepositorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repositorio");
                });

            modelBuilder.Entity("GuitServer.Models.GuitIgnoreItem", b =>
                {
                    b.HasOne("GuitServer.Models.Repositorio", "Repository")
                        .WithMany()
                        .HasForeignKey("RepositoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repository");
                });
#pragma warning restore 612, 618
        }
    }
}
